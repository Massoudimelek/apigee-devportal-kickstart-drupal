<?php

/**
 * @file
 * Functions to support theming in the apigee_material_ui theme.
 */
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Template\Attribute;

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function apigee_material_ui_preprocess_html(array &$variables) {

  $material_ui_colors = theme_get_setting('material_ui_colors','apigee_material_ui');
  $text_color = '';
  if(!empty($material_ui_colors) && in_array($material_ui_colors,array('transparent', 'white'))){
    $text_color = 'black-text';
  }
  $variables['material_ui_colors'] = $text_color;
}

/**
 * Implements template_preprocess_input() for input.html.twig.
 */
function apigee_material_ui_preprocess_input(&$variables){
  if (!empty($variables['element']['#type']) && ($variables['element']['#type'] == 'submit')) {
    $material_ui_colors = theme_get_setting('material_ui_colors','apigee_material_ui');
    $text_color = '';
    if(!empty($material_ui_colors) && in_array($material_ui_colors,array('transparent', 'white'))){
      $text_color = 'red lighten-2';
    }
    $variables['material_ui_colors'] = $text_color;
  }
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function apigee_material_ui_preprocess_page(array &$variables) {
  $variables['material_ui_navbar_fixed'] = theme_get_setting('material_ui_navbar_fixed','apigee_material_ui');
  if($variables['material_ui_navbar_fixed'] == '1') {
    $variables['material_ui_navbar_fixed'] = 'apigee-navbar-fixed';
  }
  else {
    $variables['material_ui_navbar_fixed'] = '';
  }
  $variables['material_ui_container'] = theme_get_setting('material_ui_container','apigee_material_ui');
  if($variables['material_ui_container'] == '1') {
    $variables['material_ui_container'] = 'container';
  }
  else {
    $variables['material_ui_container'] = '';
  }
  $variables['material_ui_colors'] = theme_get_setting('material_ui_colors','apigee_material_ui');

}

/**
 * Implements hook_preprocess_HOOK() for menu-local-action templates.
 */
function apigee_material_ui_preprocess_menu_local_action(array &$variables) {
  $variables['link']['#options']['attributes']['class'][] = 'btn';
  $variables['link']['#options']['attributes']['class'][] = 'waves-light';
  $variables['link']['#options']['attributes']['class'][] = 'waves-effect';
}

/**
 * Implements hook_theme_registry_alter().
 */
function apigee_material_ui_theme_registry_alter(&$theme_registry) {
  $theme_registry['menu']['variables']['sub_class'] = '';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 */
function apigee_material_ui_theme_suggestions_form_alter(array &$suggestions, array $variables) {
  if ($variables['element']['#form_id'] == 'search_block_form') {
    $suggestions[] = 'form__search_block_form';
  }
}

/**
 * Implements hook_form_alter() to add classes to the search form.
 */
function apigee_material_ui_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $material_ui_colors = theme_get_setting('material_ui_colors','apigee_material_ui');
  switch ($form_id) {
    case 'user_login_form':
      $form['#prefix'] = '<div class="card-form darken-1">';
      $form['#suffix'] = '</div>';
      $form['#attributes']['class'][] = 'card-content black-text';
      $form['links'] = Null;
      $form['user_icon']['#markup'] = '<div class="user-icon text-align-center"><i class="material-icons text-disabled">lock</i></div>';
      $form['user_icon']['#weight'] = -15;
      $form['name']['#title'] = Null;
      $form['name']['#attributes']['placeholder'] = t('Login');
      $form['name']['#description'] = Null;
      $form['pass']['#title'] = Null;
      $form['pass']['#attributes']['placeholder'] = t('Password');
      $form['pass']['#description'] = Null;
      $form['actions']['#attributes']['class'][] = 'card-item card-actions divider-top';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-accent';
      $form['actions']['request_pass']['#markup'] = '<a class="btn pull-right" href="/user/password">' . t('Reset your password') . '</a>';
      break;
    case 'user_pass':
      $form['#prefix'] = '<div class="darken-1">';
      $form['#suffix'] = '</div>';
      $form['#attributes']['class'][] = 'card-content black-text';
      $form['user_icon']['#markup'] = '<div class="user-icon text-align-center"><i class="material-icons text-disabled">vpn_key</i></div>';
      $form['user_icon']['#weight'] = -15;
      $form['mail']['#weight'] = -10;
      $form['name']['#title'] = Null;
      $form['name']['#attributes']['placeholder'] = t('Login or E-mail');
      $form['actions']['#attributes']['class'][] = 'card-item card-actions divider-top';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-accent';
      break;
    case 'user_register_form':
      $form['#prefix'] = '<div class="darken-1">';
      $form['#suffix'] = '</div>';
      $form['#attributes']['class'][] = 'black-text';
      $form['user_icon']['#markup'] = '<div class="user-icon text-align-center"><i class="material-icons text-disabled">account_circle</i></div>';
      $form['user_icon']['#weight'] = -15;
      $form['account']['name']['#title'] = Null;
      $form['account']['name']['#attributes']['placeholder'] = t('Login');
      $form['account']['mail']['#title'] = Null;
      $form['account']['mail']['#attributes']['placeholder'] = t('E-mail');
      $form['actions']['#attributes']['class'][] = 'card-item card-actions divider-top';
      $form['actions']['submit']['#attributes']['class'][] = 'btn-accent';
      break;
    case 'search_block_form':
      $form['keys']['#attributes']['placeholder'] = t('Search');
      $form['keys']['#wrapper_attributes']['class'][] = 'icon-left';
      $form['keys']['#wrapper_attributes']['data-icon'] = 'search';
      $form['actions']['submit']['#attributes']['class'][] = 'hidden';
      break;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form element templates.
 */
function apigee_material_ui_theme_suggestions_form_element_alter(array &$suggestions, array $variables) {
  if (!empty($variables['element']['#type']) && ($variables['element']['#type'] == 'checkbox' || $variables['element']['#type'] == 'radio')) {
    $suggestions[] = 'form_element__wrapped';
  }
}

/**
 * Implements hook_preprocess_HOOK() for form-element--wrapped templates.
 */
function apigee_material_ui_preprocess_form_element__wrapped(&$variables) {
  $variables['label']['#theme'] = 'form_element_label__open';
  $variables['label_open'] = $variables['label'];
  unset($variables['label']);
  $variables['title'] = !empty($variables['element']['#title']) ? $variables['element']['#title'] : '';
}
